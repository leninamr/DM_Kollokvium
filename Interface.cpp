#include "Interface.h"
#include <iostream>
using namespace std;

void Description() {
	setlocale(LC_ALL, "Russian");
	cout << "Вас приветствует система компьютерной алгебры, выполненная студентами группы 9302.\nВ данной программе доступны операции над следующими типами:\n";
	cout << "1) Натуральные числа с нулем\n2) Целые числа\n3) Рациональные числа (дроби)\n4) Многочлен с рациональными коэффициентами\n";
	cout << "Для завершения работы программы введите 0.\nДля выбора соответствующего раздела введите его номер: ";
}
void D_Natural() {
	setlocale(LC_ALL, "Russian");
	cout << "\nНатуральные числа с нулем. Доступные модули:\n";
	cout << "1) Сравнение натуральных чисел\n2) Проверка на ноль: если число не равно нулю, то «да» иначе «нет»\n3) Добавление 1 к натуральному числу\n4) Сложение натуральных чисел\n";
	cout << "5) Вычитание из первого большего натурального числа второго меньшего или равного\n6) Умножение натурального числа на цифру\n7) Умножение натурального числа на 10^k\n";
	cout << "8) Умножение натуральных чисел\n9) Вычитание из натурального другого натурального, умноженного на цифру для случая с неотрицательным результатом\n";
	cout << "10) Вычисление первой цифры деления большего натурального на меньшее, домноженное на 10^k, где k - номер позиции этой цифры (номер считается с нуля)\n11) Частное от деления большего натурального числа на меньшее или равное натуральное с остатком(делитель отличен от нуля)\n";
	cout << "12) Остаток от деления большего натурального числа на меньшее или равное натуральное с остатком(делитель отличен от нуля)\n13) НОД натуральных чисел\n14) НОК натуральных чисел\n";
	cout << "Чтобы вернуться назад введите 0.\nДля выбора соответствующего раздела введите его номер: ";
}
void D_Integer() {
	setlocale(LC_ALL, "Russian");
	cout << "\nЦелые числа. Доступные модули:\n";
	cout << "1) Абсолютная величина числа\n2) Определение положительности числа\n3) Умножение целого на (-1)";
	cout << "\n4) Сложение целых чисел\n5) Вычитание целых чисел\n6) Умножение целых чисел\n7) Частное от деления большего целого числа на меньшее или равное натуральное с остатком (делитель отличен от нуля)\n8) Остаток от деления большего целого числа на меньшее или равное натуральное с остатком (делитель отличен от нуля)\n";
	cout << "Чтобы вернуться назад введите 0.\nДля выбора соответствующего раздела введите его номер: ";
}
void D_Fraction() {
	setlocale(LC_ALL, "Russian");
	cout << "\nРациональные числа (дроби). Доступные модули:\n";
	cout << "1) Сокращение дроби\n2) Проверка на целое, если рациональное число является целым, то «да», иначе «нет»\n3) Сложение дробей\n4) Вычитание дробей\n5) Умножение дробей\n6) Деление дробей (делитель отличен от нуля)";
	cout << "\nЧтобы вернуться назад введите 0.\nДля выбора соответствующего раздела введите его номер: ";
}
void D_Polynom() {
	setlocale(LC_ALL, "Russian");
	cout << "\nМногочлен с рациональными коэффициентами. Доступные модули:\n";
	cout << "1) Сложение многочленов\n2) Вычитание многочленов\n3) Умножение многочлена на рациональное число\n4) Умножение многочлена на x^k\n5) Старший коэффициент многочлена\n6) Степень многочлена\n7) Вынесение из многочлена НОК знаменателей коэффициентов и НОД числителей\n8) Умножение многочленов\n";
	cout << "9) Частное от деления многочлена на многочлен при делении с остатком\n10) Остаток от деления многочлена на многочлен при делении с остатком\n11) НОД многочленов\n12) Производная многочлена\n13) Преобразование многочлена — кратные корни в простые\n";
	cout << "Чтобы вернуться назад введите 0.\nДля выбора соответствующего раздела введите его номер: ";
}